paths:
  /orders:
    get:
      summary: Retrieve order(s)
      description: >
        Fetch one or multiple orders for the authenticated vendor. If `vendor_order_id` is provided, retrieves details
        for the specified orders (up to 10 comma-separated IDs). Additionally, if an order shipment has been dispatched 
        and tracking information is set, the `shipment_tracking` key in the main order object will include tracking details.
        If `vendor_order_id` is not provided, retrieves a paginated list of orders.
      tags:
        - Order
      security:
        - BearerAuth: []
      parameters:
        - name: vendor_order_id
          in: query
          description: >
            Comma-separated list of up to 10 vendor order IDs to retrieve details for. 
            Example: "order1,order2,order3".
          required: false
          schema:
            type: string
            pattern: "^([^,]+,){0,9}[^,]+$"
            maxLength: 500
        - name: page_size
          in: query
          description: Number of orders to retrieve per page (defaults to 25).
          required: false
          schema:
            type: integer
            default: 25
        - name: last_evaluated_key
          in: query
          description: >
            Base64-encoded string for pagination. Use the value from the previous response's `last_evaluated_key`.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval of order(s).
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    oneOf:
                      - $ref: '#/components/schemas/Order'
                      - type: array
                        items:
                          $ref: '#/components/schemas/Order'
                    description: >
                      If `vendor_order_id` is provided, `data` is an array of order objects corresponding 
                      to the provided IDs. Otherwise, `data` is a paginated array of order objects.
                  success:
                    type: boolean
                    example: true
                  last_evaluated_key:
                    type: string
                    description: Base64-encoded string for pagination.
                    example: "eyJza2lkIjogIk9SREVSIzEyMzQ1NiJ9"
                  hasMore:
                    type: boolean
                    description: Indicates if more results are available.
                    example: true
                  tracking:
                    type: object
                    description: Contains tracking information if the order shipment has been dispatched.
                    properties:
                      shipment_tracking:
                        type: object
                        description: Details of the shipment tracking.
                        properties:
                          carrier:
                            type: string
                            example: "FedEx"
                          tracking_number:
                            type: string
                            example: "123456789"
                          status:
                            type: string
                            example: "In Transit"
        '403':
          description: Forbidden - User not authorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Forbidden'
        '404':
          description: Not Found - Order not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Order not found'
        '500':
          description: Internal Server Error - An unexpected error occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Failed to fetch orders'
